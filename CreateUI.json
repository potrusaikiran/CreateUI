{
  "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
  "handler": "Microsoft.Azure.CreateUIDef",
  "version": "0.1.2-preview",
  "parameters": {
    "config": {
      "isWizard": true
    },
    "basics": [],
    "steps": [
      {
        "name": "VirtualNetWorkConfig",
        "label": "VirtualNetwork",
        "elements": [
          {
            "name": "infoMessage",
            "type": "Microsoft.Common.InfoBox",
            "visible": true,
            "options": {
              "icon": "Info",
              "text": "Azure Virtual Network (VNet) is the fundamental building block for your private network in Azure. VNet enables many types of Azure resources, such as Azure Virtual Machines (VM), to securely communicate with each other, the internet, and on-premises networks. VNet is similar to a traditional network that you'd operate in your own data center, but brings with it additional benefits of Azure's infrastructure such as scale, availability, and isolation",
              "link": {
                "label": "hello",
                "uri": "https://go.microsoft.com/fwlink/?linkid=2097844"
              }
            }
          },
          {
            "name": "VirtualNetwork",
            "type": "Microsoft.Network.VirtualNetworkCombo",
            "label": {
              "virtualNetwork": "Virtual network",
              "subnets": "Subnets"
            },
            "toolTip": {
              "virtualNetwork": "",
              "subnets": ""
            },
            "defaultValue": {
              "name": "vnet01",
              "addressPrefixSize": "/16"
            },
            "constraints": {
              "minAddressPrefixSize": "/16"
            },
            "options": {
              "hideExisting": false
            },
            "subnets": {
              "subnet1": {
                "label": "Default subnet",
                "defaultValue": {
                  "name": "Defaultsubnet",
                  "addressPrefixSize": "/24"
                },
                "constraints": {
                  "minAddressPrefixSize": "/24",
                  "minAddressCount": 12,
                  "requireContiguousAddresses": true
                }
              }
            },
            "visible": true
          }
        ]
      },
      {
        "name": "storageConfig",
        "label": "Storage settings",
        "subLabel": {
          "preValidation": "Configure the infrastructure settings",
          "postValidation": "Done"
        },
        "bladeTitle": "Storage settings",
        "elements": [
          {
            "name": "storageAccounts",
            "type": "Microsoft.Storage.MultiStorageAccountCombo",
            "label": {
              "prefix": "Storage account name prefix",
              "type": "Storage account type"
            },
            "defaultValue": {
              "type": "Standard_LRS"
            },
            "constraints": {
              "allowedTypes": [
                "Premium_LRS",
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Standard_RAGRS",
                "Premium_GRS",
                "Premium_ZRS"
              ]
            }
          }
        ]
      }
    ],
    "outputs": {
      "virtualNetworkName": "[steps('VirtualNetWorkConfig').VirtualNetwork.name]",
      "addressPrefixes": "[steps('VirtualNetWorkConfig').VirtualNetwork.addressPrefixes]",
      "virtualNetworkNewOrExisting": "[steps('VirtualNetWorkConfig').VirtualNetwork.newOrExisting]",
      "subnetName": "[steps('VirtualNetWorkConfig').VirtualNetwork.subnets.subnet1.name]",
      "subnetPrefix": "[steps('VirtualNetWorkConfig').VirtualNetwork.subnets.subnet1.addressPrefix]",
      "virtualNetworkResourceGroupName": "[steps('VirtualNetWorkConfig').VirtualNetwork.resourceGroup]",
      "storageAccountNamePrefix": "[steps('storageConfig').storageAccounts.prefix]",
      "storageAccountType": "[steps('storageConfig').storageAccounts.type]"
    }
  }
}
